---
AWSTemplateFormatVersion: "2010-09-09"

Description: "Create single network infrastructure for all Wordpress installations"
Parameters:
  VPCName:
    Description: The name of the VPC being created.
    Type: String
    Default: "wordpress"
  ProjectName:
    Description: Please specify a unique string to identify this Wordpress installation for various purposes (billing, technical, etc)
    Type: String
    MinLength: 8
    ConstraintDescription: "Length of the unique ID should be at least 10 characters and it may contains only characters and numbers."
    Default: "baseinfra"

Mappings:
  SubnetConfig:
    VPC:
      CIDR: "10.0.0.0/16"
    Public0:
      CIDR: "10.0.0.0/19"
    Public1:
      CIDR: "10.0.32.0/19"
    Private0:
      CIDR: "10.0.64.0/19"
    Private1:
      CIDR: "10.0.96.0/19"

  AZRegions:
    us-east-1:
      AZs: ["a", "b"]
    us-east-2:
      AZs: ["a", "b"]
    us-west-1:
      AZs: ["a", "b"]
    us-west-2:
      AZs: ["a", "b"]
    af-south-1:
      AZs: ["a", "b"]
    ap-east-1:
      AZs: ["a", "b"]
    ap-south-2:
      AZs: ["a", "b"]
    ap-southeast-3:
      AZs: ["a", "b"]
    ap-southeast-4:
      AZs: ["a", "b"]
    ap-south-1:
      AZs: ["a", "b"]
    ap-northeast-3:
      AZs: ["a", "b"]
    ap-northeast-2:
      AZs: ["a", "b"]
    ap-southeast-1:
      AZs: ["a", "b"]
    ap-southeast-2:
      AZs: ["a", "b"]
    ap-northeast-1:
      AZs: ["a", "b"]
    ca-central-1:
      AZs: ["a", "b"]
    ca-west-1:
      AZs: ["a", "b"]
    eu-central-1:
      AZs: ["a", "b"]
    eu-west-1:
      AZs: ["a", "b"]
    eu-west-2:
      AZs: ["a", "b"]
    eu-south-1:
      AZs: ["a", "b"]
    eu-west-3:
      AZs: ["a", "b"]
    eu-south-2:
      AZs: ["a", "b"]
    eu-north-1:
      AZs: ["a", "b"]
    eu-central-2:
      AZs: ["a", "b"]
    il-central-1:
      AZs: ["a", "b"]
    me-south-1:
      AZs: ["a", "b"]
    me-central-1:
      AZs: ["a", "b"]
    sa-east-1:
      AZs: ["a", "b"]

Resources:

  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      CidrBlock:
        Fn::FindInMap:
          - "SubnetConfig"
          - "VPC"
          - "CIDR"
      Tags:
        -
          Key: "Application"
          Value:
            Ref: "AWS::StackName"
        -
          Key: "Network"
          Value: "Public"
        -
          Key: "Name"
          Value: !Ref 'VPCName'
        -
          Key: "project"
          Value: !Ref 'ProjectName'

  PublicSubnet0:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: "VPC"
      AvailabilityZone:
        Fn::Sub:
          - "${AWS::Region}${AZ}"
          - AZ: !Select [ 0, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
      CidrBlock:
        Fn::FindInMap:
          - "SubnetConfig"
          - "Public0"
          - "CIDR"
      MapPublicIpOnLaunch: "true"
      Tags:
        -
          Key: "Application"
          Value:
            Ref: "AWS::StackName"
        -
          Key: "Network"
          Value: "Public"
        -
          Key: "Name"
          Value: !Join
            - ''
            - - !Ref "VPCName"
              - '-public-'
              - !Select [ 0, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
        -
          Key: "project"
          Value: !Ref 'ProjectName'

  PublicSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: "VPC"
      AvailabilityZone:
        Fn::Sub:
          - "${AWS::Region}${AZ}"
          - AZ: !Select [ 1, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
      CidrBlock:
        Fn::FindInMap:
          - "SubnetConfig"
          - "Public1"
          - "CIDR"
      MapPublicIpOnLaunch: "true"
      Tags:
        -
          Key: "Application"
          Value:
            Ref: "AWS::StackName"
        -
          Key: "Network"
          Value: "Public"
        -
          Key: "Name"
          Value: !Join
            - ''
            - - !Ref "VPCName"
              - '-public-'
              - !Select [ 1, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
        -
          Key: "project"
          Value: !Ref 'ProjectName'

  PrivateSubnet0:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: "VPC"
      AvailabilityZone:
        Fn::Sub:
          - "${AWS::Region}${AZ}"
          - AZ: !Select [ 0, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
      CidrBlock:
        Fn::FindInMap:
          - "SubnetConfig"
          - "Private0"
          - "CIDR"
      Tags:
        -
          Key: "Application"
          Value:
            Ref: "AWS::StackName"
        -
          Key: "Network"
          Value: "Private"
        -
          Key: "Name"
          Value: !Join
            - ''
            - - !Ref "VPCName"
              - '-private-'
              - !Select [ 0, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
        -
          Key: "project"
          Value: !Ref 'ProjectName'

  PrivateSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: "VPC"
      AvailabilityZone:
        Fn::Sub:
          - "${AWS::Region}${AZ}"
          - AZ: !Select [ 1, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
      CidrBlock:
        Fn::FindInMap:
          - "SubnetConfig"
          - "Private1"
          - "CIDR"
      Tags:
        -
          Key: "Application"
          Value:
            Ref: "AWS::StackName"
        -
          Key: "Network"
          Value: "Private"
        -
          Key: "Name"
          Value: !Join
            - ''
            - - !Ref "VPCName"
              - '-private-'
              - !Select [ 1, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
        -
          Key: "project"
          Value: !Ref 'ProjectName'

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        -
          Key: "Application"
          Value:
            Ref: "AWS::StackName"
        -
          Key: "Network"
          Value: "Public"
        -
          Key: "Name"
          Value: !Join
            - ''
            - - !Ref "VPCName"
              - '-IGW'
        -
          Key: "project"
          Value: !Ref 'ProjectName'

  GatewayToInternet:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId:
        Ref: "VPC"
      InternetGatewayId:
        Ref: "InternetGateway"

  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId:
        Ref: "VPC"
      Tags:
        -
          Key: "Application"
          Value:
            Ref: "AWS::StackName"
        -
          Key: "Network"
          Value: "Public"
        -
          Key: "Name"
          Value: !Join
            - ''
            - - !Ref "VPCName"
              - '-public-route-table'
        -
          Key: "project"
          Value: !Ref 'ProjectName'


  PublicRoute:
    Type: "AWS::EC2::Route"
    DependsOn: "GatewayToInternet"
    Properties:
      RouteTableId:
        Ref: "PublicRouteTable"
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId:
        Ref: "InternetGateway"

  PublicSubnetRouteTableAssociation0:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId:
        Ref: "PublicSubnet0"
      RouteTableId:
        Ref: "PublicRouteTable"

  PublicSubnetRouteTableAssociation1:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId:
        Ref: "PublicSubnet1"
      RouteTableId:
        Ref: "PublicRouteTable"

  PublicNetworkAcl:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      VpcId:
        Ref: "VPC"
      Tags:
        -
          Key: "Application"
          Value:
            Ref: "AWS::StackName"
        -
          Key: "Network"
          Value: "Public"
        -
          Key: "Name"
          Value: !Join
            - ''
            - - !Ref "VPCName"
              - '-public-nacl'
        -
          Key: "project"
          Value: !Ref 'ProjectName'

  InboundHTTPPublicNetworkAclEntry:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId:
        Ref: "PublicNetworkAcl"
      RuleNumber: "100"
      Protocol: "-1"
      RuleAction: "allow"
      Egress: "false"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: "0"
        To: "65535"

  OutboundPublicNetworkAclEntry:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId:
        Ref: "PublicNetworkAcl"
      RuleNumber: "100"
      Protocol: "-1"
      RuleAction: "allow"
      Egress: "true"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: "0"
        To: "65535"

  PublicSubnetNetworkAclAssociation0:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId:
        Ref: "PublicSubnet0"
      NetworkAclId:
        Ref: "PublicNetworkAcl"

  PublicSubnetNetworkAclAssociation1:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId:
        Ref: "PublicSubnet1"
      NetworkAclId:
        Ref: "PublicNetworkAcl"

  ElasticIP0:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: "vpc"

  ElasticIP1:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: "vpc"

  NATGateway0:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId:
        Fn::GetAtt:
          - "ElasticIP0"
          - "AllocationId"
      SubnetId:
        Ref: "PublicSubnet0"

  NATGateway1:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId:
        Fn::GetAtt:
          - "ElasticIP1"
          - "AllocationId"
      SubnetId:
        Ref: "PublicSubnet1"

  PrivateRouteTable0:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId:
        Ref: "VPC"
      Tags:
        -
          Key: "Name"
          Value: !Join
            - ''
            - - !Ref "VPCName"
              - '-private-route-table-0'
        -
          Key: "project"
          Value: !Ref 'ProjectName'

  PrivateRouteTable1:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId:
        Ref: "VPC"
      Tags:
        -
          Key: "Name"
          Value: !Join
            - ''
            - - !Ref "VPCName"
              - '-private-route-table-1'
        -
          Key: "project"
          Value: !Ref 'ProjectName'

  PrivateRouteToInternet0:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId:
        Ref: "PrivateRouteTable0"
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId:
        Ref: "NATGateway0"

  PrivateRouteToInternet1:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId:
        Ref: "PrivateRouteTable1"
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId:
        Ref: "NATGateway1"

  PrivateSubnetRouteTableAssociation0:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId:
        Ref: "PrivateSubnet0"
      RouteTableId:
        Ref: "PrivateRouteTable0"

  PrivateSubnetRouteTableAssociation1:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId:
        Ref: "PrivateSubnet1"
      RouteTableId:
        Ref: "PrivateRouteTable1"

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: wp-db-subnet-group
      DBSubnetGroupDescription: wp-db-subnet-group
      SubnetIds:
        - !Ref PrivateSubnet0
        - !Ref PrivateSubnet1

  WordpressAWSRegionID:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/wordpress/aws-region-id"
      Type: "String"
      Value: !Ref "AWS::Region"
      Description: "Wordpress AWS Region ID"

  WordpressVPCID:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/wordpress/vpc-id"
      Type: "String"
      Value: !Ref VPC
      Description: "Wordpress VPC ID"

  WordpressVPCCIDR:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/wordpress/vpc-cidr"
      Type: "String"
      Value: !FindInMap [SubnetConfig, VPC, CIDR]
      Description: "Wordpress VPC ID"

  WordpressVPCPrivateSubnetID0:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/wordpress/vpc-private-subnet-id-0"
      Type: "String"
      Value: !Ref PrivateSubnet0
      Description: "Wordpress Private Subnet ID 0"

  WordpressVPCPrivateSubnetID1:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/wordpress/vpc-private-subnet-id-1"
      Type: "String"
      Value: !Ref PrivateSubnet1
      Description: "Wordpress Private Subnet ID 1"

  WordpressVPCPublicSubnetID0:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/wordpress/vpc-public-subnet-id-0"
      Type: "String"
      Value: !Ref PublicSubnet0
      Description: "Wordpress Public Subnet ID 0"

  WordpressVPCPublicSubnetID1:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/wordpress/vpc-public-subnet-id-1"
      Type: "String"
      Value: !Ref PublicSubnet1
      Description: "Wordpress Public Subnet ID 1"

  WordpressVPCDBSubnetGroup:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/wordpress/vpc-db-subnet-group"
      Type: "String"
      Value: !Ref DBSubnetGroup
      Description: "Wordpress DB Subnet Group"
